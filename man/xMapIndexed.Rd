% Generated by roxygen2 (4.0.0): do not edit by hand
\name{xMapIndexed}
\alias{xMapIndexed}
\alias{xMapIndexed_}
\title{xMapIndexed}
\usage{
xMapIndexed(fn, coll)

xMapIndexed_(fn, ...)
}
\arguments{
\item{fn}{a binary function. A function that takes a
   value in \bold{coll} as its left argument and a
   an index as its right argument.}

\item{coll}{a collection. The collection to apply a function to.}

\item{...}{see above.}
}
\value{
A list.
}
\description{
Apply a binary function to each element of a
collection and its index.
}
\section{Corner Cases}{

   Returns the empty list is \bold{coll} is length-zero.
}
\examples{

# 1. Factorions
#    factorions are numbers whose value is the sum of the
#    factorials of its digits. For example,
#    145 = 1! + 4! + 5!
#    the below example uses a lot of chained function composition,
#    to process and sum each digit of the number to search,
#
#    There are only four factorions in base 10:
#
#    1, 2, 145, 40585
#
#    There are more efficient ways to find the numbers,
#    but a brute force search is fun, if really slow.

digit_factorial_sum_of <-
	paste \%then\% xToChars \%then\% as.integer \%then\% factorial \%then\% sum

x_(1:50000) $
xFlatMap(num := {

	digit_factorial_sum <- digit_factorial_sum_of(num)

	if (digit_factorial_sum == num) {
		digit_factorial_sum
	}

})
}
\seealso{
Other function_application_functions: \code{\link{xApply}},
  \code{\link{xApply_}}; \code{\link{xDeepMap}},
  \code{\link{xDeepMap_}}; \code{\link{xFlatMap}},
  \code{\link{xFlatMap_}}; \code{\link{xMapply}},
  \code{\link{xMapply_}}; \code{\link{xMap}},
  \code{\link{xMap_}}; \code{\link{xSpread}};
  \code{\link{xThread}}, \code{\link{xThread_}};
  \code{\link{xUnspread}}; \code{\link{xVectorise}},
  \code{\link{xVectorize}}
}

