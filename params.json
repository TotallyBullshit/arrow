{"name":"Arrow","tagline":"Functional Composable R","body":"Arrow pre-v0.1.0\r\n-----------------------------------\r\n\r\n<img src=\"logo.png\" height = \"180\"> </img>\r\n\r\n**DISCLAIMER: Arrow is in heavy development and is highly liable to change.**\r\n\r\nArrow is a toolset of more than one hundred functions from languages\r\nlike Haskell, JavaScript, and functions designed just for R. These\r\ninclude familiar functions like Map, Select, Reduce and Compose, as\r\nwell as many functions for working with na values, reshaping collections,\r\ncomposing functions and manipulating strings.\r\n\r\nI hope you enjoy using Arrow as much as I've enjoyed making it. To\r\ncontribute with feedback, bug-reports or code go to the Arrow\r\n[github repository](https://github.com/rgrannell1/arrow). Any feedback is\r\nappreciated.\r\n\r\n### What Arrow code looks like.\r\n\r\n```r\r\n# how many primitive functions are there in R?\r\n\r\nxPoll(\r\n\tfn_name := {\r\n\t\tfn <- get(fn_name)\r\n\t\tis.function(fn) && is.primitive(fn)\r\n\t},\r\n\tls('package:base')\r\n)\r\n\r\n178\r\n```\r\n\r\n### Arrow is Expressive\r\n\r\n* Programs are built in a lego-like manner; stacking small,\r\nuniquely-purposed functions into a larger program.\r\n\r\n* Like Ruby and JavaScript, Arrow has a shorthand syntax\r\nfor creating functions to R.\r\n\r\n* Arrow implements jQuery-like chaining methods without using R's bulkier\r\nobject-orientation systems. These methods are just as usable as those in\r\nPython or JavaScript. This syntax is handy for interactive programming.\r\n\r\n* Arrow uses consistent naming conventions to make its functions more predictable.\r\n\r\n* Almost every function has a variadic and non-variadic form, to\r\nreduce boilerplate code.\r\n\r\n### Arrow is Consistent\r\n\r\n* Functions don't discriminate between different types of vectors; lists, pairlists\r\nand typed vectors are all interchangable.\r\n\r\n* Extensive effort was made to make sure that Arrow never throws\r\na cryptic error - arguments are always explicitly checked, and the precise\r\ncause of the error is always given.\r\n\r\n* Arrow is interoperable with base R functions.\r\n\r\n### Arrow is Functional\r\n\r\n* Arrow implements all the standard higher-order functions,\r\nas well as dozens of collection-reshaping functions.\r\n\r\n* Several variants of the most common functionals are implemented,\r\nincluding several flavours of map and fold.\r\n\r\n* A new control statement - the ```Return( )``` function - can\r\nbe used to improve the expressiveness of functional code.\r\n\r\n* Partial application and function composition are encouraged\r\nas standard operations.\r\n\r\n## 5 Authors\r\n\r\nRyan Grannell.\r\n\r\n## 6 Licensing\r\n\r\n**Arrow** is released under the terms of the GNU General Public License version 3.\r\n\r\n<img src=\"gpl3.png\" height = \"180\"> </img>\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}